{"ast":null,"code":"import _regeneratorRuntime from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import'./App.css';import'weather-icons/css/weather-icons.css';import'bootstrap/dist/css/bootstrap.min.css';import Weather from'./components/weather.component';// chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nvar API_key=\"235bda840484f67b319f6674921481e5\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.getWeather=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var api_call,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=\".concat(API_key));case 2:api_call=_context.sent;_context.next=5;return api_call.json();case 5:response=_context.sent;console.log(\"teste: \"+response);_this.setState({city:response.name,country:response.sys.country,celsius:_this.calCelsius(response.main.temp),temp_max:_this.calCelsius(response.main.temp_max),temp_min:_this.calCelsius(response.main.temp_min),description:response.weather[0].description,icon:_this.weatherIcon.Thunderstorm});case 8:case\"end\":return _context.stop();}}},_callee);}));_this.state={city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,temp_max:undefined,temp_min:undefined,description:\"\",error:false};_this.getWeather();_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\"};return _this;}_createClass(App,[{key:\"calCelsius\",value:function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Weather,{city:this.state.city,country:this.state.country,temp_celsius:this.state.celsius,temp_max:this.state.temp_max,temp_min:this.state.temp_min,description:this.state.description,weatherIcon:this.state.icon})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/initiuns/Área de Trabalho/WeatherAPI/weather-brainsss/src/App.js"],"names":["React","Weather","API_key","App","getWeather","fetch","api_call","json","response","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","icon","weatherIcon","Thunderstorm","state","undefined","error","cell","Math","floor","Component"],"mappings":"83BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,WAAP,CAEA,MAAO,qCAAP,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,kCAAhB,C,GAEMC,CAAAA,G,sGAEJ,cAAc,qCACZ,wBADY,MAyBdC,UAzBc,sEAyBD,+KACYC,CAAAA,KAAK,4EAC0CH,OAD1C,EADjB,QACLI,QADK,qCAKYA,CAAAA,QAAQ,CAACC,IAAT,EALZ,QAKLC,QALK,eAOXC,OAAO,CAACC,GAAR,CAAY,UAAYF,QAAxB,EAEA,MAAKG,QAAL,CAAc,CACZC,IAAI,CAAEJ,QAAQ,CAACK,IADH,CAEZC,OAAO,CAAEN,QAAQ,CAACO,GAAT,CAAaD,OAFV,CAGZE,OAAO,CAAE,MAAKC,UAAL,CAAgBT,QAAQ,CAACU,IAAT,CAAcC,IAA9B,CAHG,CAIZC,QAAQ,CAAE,MAAKH,UAAL,CAAgBT,QAAQ,CAACU,IAAT,CAAcE,QAA9B,CAJE,CAKZC,QAAQ,CAAE,MAAKJ,UAAL,CAAgBT,QAAQ,CAACU,IAAT,CAAcG,QAA9B,CALE,CAMZC,WAAW,CAAEd,QAAQ,CAACe,OAAT,CAAiB,CAAjB,EAAoBD,WANrB,CAOZE,IAAI,CAAE,MAAKC,WAAL,CAAiBC,YAPX,CAAd,EATW,sDAzBC,GAEZ,MAAKC,KAAL,CAAa,CACXf,IAAI,CAAEgB,SADK,CAEXd,OAAO,CAAEc,SAFE,CAGXJ,IAAI,CAAEI,SAHK,CAIXV,IAAI,CAAEU,SAJK,CAKXZ,OAAO,CAAEY,SALE,CAMXR,QAAQ,CAAEQ,SANC,CAOXP,QAAQ,CAAEO,SAPC,CAQXN,WAAW,CAAE,EARF,CASXO,KAAK,CAAE,KATI,CAAb,CAWA,MAAKzB,UAAL,GAEA,MAAKqB,WAAL,CAAmB,CACjBC,YAAY,CAAE,iBADG,CAAnB,CAfY,aAkBb,C,8DAEUP,I,CAAM,CACf,GAAIW,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,CAAG,MAAlB,CAAX,CACA,MAAOW,CAAAA,IAAP,CACD,C,uCAsBQ,CACP,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,KAAC,OAAD,EACE,IAAI,CAAE,KAAKH,KAAL,CAAWf,IADnB,CAEE,OAAO,CAAI,KAAKe,KAAL,CAAWb,OAFxB,CAGE,YAAY,CAAI,KAAKa,KAAL,CAAWX,OAH7B,CAIE,QAAQ,CAAI,KAAKW,KAAL,CAAWP,QAJzB,CAKE,QAAQ,CAAI,KAAKO,KAAL,CAAWN,QALzB,CAME,WAAW,CAAI,KAAKM,KAAL,CAAWL,WAN5B,CAOE,WAAW,CAAI,KAAKK,KAAL,CAAWH,IAP5B,EADF,EADF,CAaD,C,iBA7DexB,KAAK,CAACiC,S,EAgExB,cAAe9B,CAAAA,GAAf","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './components/weather.component';\n\n// chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key = \"235bda840484f67b319f6674921481e5\";\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\"\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`\n    );\n  \n    const response = await api_call.json();\n\n    console.log(\"teste: \" + response);\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n      icon: this.weatherIcon.Thunderstorm\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\"> \n        <Weather \n          city={this.state.city} \n          country = {this.state.country}\n          temp_celsius = {this.state.celsius}\n          temp_max = {this.state.temp_max} \n          temp_min = {this.state.temp_min}\n          description = {this.state.description}\n          weatherIcon = {this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}