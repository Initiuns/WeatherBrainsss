{"ast":null,"code":"import _regeneratorRuntime from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import'./App.css';import'weather-icons/css/weather-icons.css';import'bootstrap/dist/css/bootstrap.min.css';import Weather from'./components/weather.component';import Form from'./components/form.component';// chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nvar API_key=\"235bda840484f67b319f6674921481e5\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var city,country,api_call,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();city=e.target.elements.city.value;country=e.target.elements.country.value;if(!(city&&country)){_context.next=15;break;}_context.next=6;return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\",\").concat(country,\"&appid=\").concat(API_key));case 6:api_call=_context.sent;_context.next=9;return api_call.json();case 9:response=_context.sent;console.log(\"teste: \"+response);_this.setState({city:\"\".concat(response.name,\", \").concat(response.sys.country),celsius:_this.calCelsius(response.main.temp),temp_max:_this.calCelsius(response.main.temp_max),temp_min:_this.calCelsius(response.main.temp_min),description:response.weather[0].description,error:false});_this.get_WeatherIcon(_this.weatherIcon,response.weather[0].id);_context.next=16;break;case 15:_this.setState({error:true});case 16:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,temp_max:undefined,temp_min:undefined,description:\"\",error:false};// this.getWeather();\n_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-storm-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};return _this;}_createClass(App,[{key:\"calCelsius\",value:function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;}},{key:\"get_WeatherIcon\",value:function get_WeatherIcon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<=232:this.setState({icon:this.weatherIcon.Thunderstorm});break;case rangeId>=300&&rangeId<=321:this.setState({icon:this.weatherIcon.Drizzle});break;case rangeId>=500&&rangeId<=531:this.setState({icon:this.weatherIcon.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:this.weatherIcon.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:this.weatherIcon.Atmosphere});break;case rangeId===800:this.setState({icon:this.weatherIcon.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:this.weatherIcon.Clouds});break;default:this.setState({icon:this.weatherIcon.Clouds});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Form,{loadweather:this.getWeather,error:this.state.error}),/*#__PURE__*/_jsx(Weather,{city:this.state.city,country:this.state.country,temp_celsius:this.state.celsius,temp_max:this.state.temp_max,temp_min:this.state.temp_min,description:this.state.description,weatherIcon:this.state.icon})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/initiuns/Área de Trabalho/WeatherAPI/weather-brainsss/src/App.js"],"names":["React","Weather","Form","API_key","App","getWeather","e","preventDefault","city","target","elements","value","country","fetch","api_call","json","response","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","error","get_WeatherIcon","weatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeId","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './components/weather.component';\nimport Form from './components/form.component';\n\n// chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key = \"235bda840484f67b319f6674921481e5\";\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    // this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch(true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.Thunderstorm});\n      break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.Drizzle});\n      break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon:this.weatherIcon.Rain});\n      break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.Snow});\n      break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon:this.weatherIcon.Atmosphere});\n      break;\n\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.Clear});\n      break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon:this.weatherIcon.Clouds});\n      break;\n\n      default:\n        this.setState({icon:this.weatherIcon.Clouds});\n    }\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n      );\n    \n      const response = await api_call.json();\n  \n      console.log(\"teste: \" + response);\n  \n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n  \n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id); \n    } else {\n      this.setState({error: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\"> \n        <Form loadweather = {this.getWeather} error = {this.state.error} />\n        <Weather \n          city={this.state.city} \n          country = {this.state.country}\n          temp_celsius = {this.state.celsius}\n          temp_max = {this.state.temp_max} \n          temp_min = {this.state.temp_min}\n          description = {this.state.description}\n          weatherIcon = {this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}