{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/initiuns/\\xC1rea de Trabalho/WeatherAPI/weather-brainsss/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './components/weather.component';\nimport Form from './components/form.component'; // chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nconst API_key = \"235bda840484f67b319f6674921481e5\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n        const response = await api_call.json();\n        console.log(\"teste: \" + response);\n        this.setState({\n          city: response.name,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description\n        });\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    }; // this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        loadweather: this.getWeather,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/initiuns/Área de Trabalho/WeatherAPI/weather-brainsss/src/App.js"],"names":["React","Weather","Form","API_key","App","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","get_WeatherIcon","weatherIcon","id","error","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","icons","rangeId","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nimport 'weather-icons/css/weather-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weather from './components/weather.component';\nimport Form from './components/form.component';\n\n// chamar api em api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst API_key = \"235bda840484f67b319f6674921481e5\";\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    // this.getWeather();\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch(true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.Thunderstorm});\n      break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.Drizzle});\n      break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon:this.weatherIcon.Rain});\n      break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.Snow});\n      break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon:this.weatherIcon.Atmosphere});\n      break;\n\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.Clear});\n      break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon:this.weatherIcon.Clouds});\n      break;\n\n      default:\n        this.setState({icon:this.weatherIcon.Clouds});\n    }\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n      );\n    \n      const response = await api_call.json();\n  \n      console.log(\"teste: \" + response);\n  \n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n  \n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id); \n    } else {\n      this.setState({error: true});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\"> \n        <Form loadweather = {this.getWeather} error = {this.state.error} />\n        <Weather \n          city={this.state.city} \n          country = {this.state.country}\n          temp_celsius = {this.state.celsius}\n          temp_max = {this.state.temp_max} \n          temp_min = {this.state.temp_min}\n          description = {this.state.description}\n          weatherIcon = {this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}